# Docker Compose override for macOS optimizations
# This file is automatically used by docker-compose on macOS

services:
  # PostgreSQL optimizations for macOS
  postgres:
    # Reduce memory usage for development
    environment:
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 256MB
      POSTGRES_WORK_MEM: 4MB
    # Use tmpfs for better performance on macOS
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # Redis optimizations for macOS
  redis:
    # Optimize Redis for macOS development
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 128mb 
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --tcp-keepalive 60
    # Use tmpfs for better performance
    tmpfs:
      - /tmp

  # Django web application optimizations
  web:
    # Reduce Django autoreload overhead on macOS
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_WATCHMAN_TIMEOUT=10
      - DJANGO_AUTORELOAD_EXTRA_FILES=
    # Use cached volume for node_modules and .git to improve performance
    volumes:
      - .:/app:delegated
      - static_volume:/app/staticfiles
      - node_modules_cache:/app/node_modules
      - git_cache:/app/.git
    # Limit resources for development
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Celery worker optimizations
  celery:
    # Reduce concurrency for macOS development
    command: celery -A idp worker --loglevel=info --concurrency=1 --prefetch-multiplier=1
    environment:
      - PYTHONUNBUFFERED=1
      - CELERY_TASK_ALWAYS_EAGER=False
      - CELERY_TASK_EAGER_PROPAGATES=True
    volumes:
      - .:/app:delegated
      - node_modules_cache:/app/node_modules
      - git_cache:/app/.git
    # Limit resources
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Celery beat optimizations
  celery-beat:
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app:delegated
      - node_modules_cache:/app/node_modules
      - git_cache:/app/.git
    # Limit resources
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Flower optimizations
  flower:
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app:delegated
      - node_modules_cache:/app/node_modules
      - git_cache:/app/.git
    # Limit resources
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Test service optimizations
  test:
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app:delegated
      - node_modules_cache:/app/node_modules
      - git_cache:/app/.git
    # Limit resources for testing
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

volumes:
  # Additional volumes for caching
  node_modules_cache:
    driver: local
  git_cache:
    driver: local 
