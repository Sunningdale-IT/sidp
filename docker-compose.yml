services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    platform: linux/amd64
    container_name: idp_postgres
    environment:
      POSTGRES_DB: idp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # macOS optimizations
    shm_size: 256mb

  # Redis for Celery
  redis:
    image: redis:7-alpine
    platform: linux/amd64
    container_name: idp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Redis configuration for better performance on macOS
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Django Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    platform: linux/amd64
    container_name: idp_web
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-local-development-key-change-in-production
      - DB_NAME=idp
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    ports:
      - "8000:8000"
    volumes:
      # Use delegated consistency for better performance on macOS
      - .:/app:delegated
      - static_volume:/app/staticfiles
      # Exclude node_modules and other heavy directories for better performance
      - /app/node_modules
      - /app/.git
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "./scripts/init-db.sh &&
             python manage.py migrate &&
             python manage.py create_default_users &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Celery Worker
  celery:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    platform: linux/amd64
    container_name: idp_celery
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-local-development-key-change-in-production
      - DB_NAME=idp
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      # Use delegated consistency for better performance on macOS
      - .:/app:delegated
      - /app/node_modules
      - /app/.git
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A idp worker --loglevel=info --concurrency=2
    healthcheck:
      test: ["CMD-SHELL", "celery -A idp inspect ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    platform: linux/amd64
    container_name: idp_celery_beat
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-local-development-key-change-in-production
      - DB_NAME=idp
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      # Use delegated consistency for better performance on macOS
      - .:/app:delegated
      - /app/node_modules
      - /app/.git
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A idp beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  # Flower (Celery Monitoring)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    platform: linux/amd64
    container_name: idp_flower
    environment:
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    volumes:
      # Use delegated consistency for better performance on macOS
      - .:/app:delegated
      - /app/node_modules
      - /app/.git
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A idp flower --port=5555

  # Test Runner Service
  test:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    platform: linux/amd64
    container_name: idp_test
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-test-key
      - DB_NAME=idp_test
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
    volumes:
      - .:/app:delegated
      - /app/node_modules
      - /app/.git
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "./scripts/init-db.sh &&
             python manage.py migrate --settings=idp.test_settings &&
             python manage.py test --settings=idp.test_settings"
    profiles:
      - testing

  # Nginx (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    platform: linux/amd64
    container_name: idp_nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/www/static:ro
    depends_on:
      - web
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
